/*========================*/
/*  Prob 01.              */
/*  Decipher the text.    */
/*------------------------*/

// The text to decipher.
var text = [[
Uid nx, aex jcdjipx iu wzux zp, ta wxtpa jtdaws, ai etkx vis.
Dcos zyexdzaxr aex Jxdw jezwipijes iu etkzyg nidx aety iyx hts
ai ri aex ptnx aezyg. Z zyexdzaxr aeta jezwipijes udin Wtdds Htww,
hei zp ns exdi tqactwws. Z htya ai ntfx Dcos cpxdp udxx. Z htya ai
gzkx aexn aex udxxrin ai qeiipx. Jxijwx tdx rzuuxdxya. Jxijwx qeiipx
rzuuxdxya qdzaxdzt. Oca zu aexdx zp t oxaaxd hts tniyg ntys
twaxdytazkxp, Z htya ai xyqicdtgx aeta hts os ntfzyg za qinuidatowx.
Pi aeta'p heta Z'kx adzxr ai ri.
Z htya ai piwkx jdiowxnp Z nxxa zy aex rtzws wzux os cpzyg qinjcaxdp,
pi Z yxxr ai hdzax jdigdtnp. Os cpzyg Dcos, Z htya ai qiyqxyadtax aex
aezygp Z ri, yia aex ntgzqtw dcwxp iu aex wtygctgx, wzfx patdazyg hzae
jcowzq kizr  pinxaezyg pinxaezyg pinxaezyg ai pts, "jdzya exwwi hidwr."
Z vcpa htya ai pts, "jdzya aezp!" Z riy'a htya tww aex pcddicyrzyg
ntgzq fxshidrp. Z vcpa htya ai qiyqxyadtax iy aex atpf. Aeta'p aex otpzq
zrxt. Pi Z etkx adzxr ai ntfx Dcos qirx qiyqzpx tyr pcqqzyqa.
Scfzezdi Ntapcniai. (hhh.tdaznt.qin/zyak/dcos)
]]

// This is the frequency table of the original text (from more frequent to less frequent).
var freqLang = "TEOIARNSHLMYUCWDGPFBVKJ"

// Create frequency table of the encrypted text.
var len = string.len(text)
var frequency = {}

for each (var k = 1 to len) {
	var c = string.upper(string.sub(text, k, k));
    // Check if character is an uppercase letter.
	if (string.find(c, "%u") != null) {
		if (frequency[c] == null) {
            frequency[c] = 1
        }
		else {
            frequency[c] += 1
        }
	}
}


// Create table for sorting the text frequency.
var sortFreq = {}
for each (var k,v in pairs(frequency)) {
    table.insert(sortFreq, {key: k, value: v})
}

// Sort in descending order.
table.sort(sortFreq, function(a, b) { return (a.value > b.value) })

// Create dictionary for deciphering.
var dic = {}
var freqText = ''
var index = 1

for each (var k,v in pairs(sortFreq)) {
    ////print(v.key, v.value)
    freqText = freqText .. v.key
    dic[v.key] = string.sub(freqLang, index, index)
    index = index + 1
}

////print(freqText); // encrypted text frequency
////print(freqLang); // original text frequency

var decrypted = ''

for each (var k = 1 to len) {
	var upper = false;
	var c = string.sub(text, k, k)

    if (string.find(c, "%u")) {
        upper = true
    }
	else {
        c = string.upper(c);
    }

	if (dic[c] != null) {
		if (upper)	{
            decrypted = decrypted .. dic[c]
        }
		else {
            decrypted = decrypted .. string.lower(dic[c])
        }
    }
	else {
        decrypted = decrypted .. c
    }
}

print(decrypted)
